---
- name: Create a test environment for a feature branch via a Job Template (NOT a webhook)
  hosts: localhost
  gather_facts: false
  vars:
    git_branch_name: ""
    git_repo_url: ""
    action: ""
  tasks:
    - name: Print variables
      ansible.builtin.debug:
        msg:
          - "GIT branch name: {{ git_branch_name }}"
          - "GIT repo URL   : {{ git_repo_url }}"
          - "Action         : {{ action }}"

    - block:
        - name: Create a project for the feature branch {{ git_branch_name }}
          ansible.controller.project:
            name: "Pipeline - SOE - project for feature branch {{ git_branch_name }}"
            # yamllint disable-line rule:line-length
            description: "Test environment for feature branch {{ git_branch_name }}"
            organization: "Pipeline"
            scm_type: git
            scm_url: "{{ git_repo_url }}"
            scm_branch: "{{ git_branch_name }}"
            scm_credential: "tower-credentials"
            validate_certs: false
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"

        - name: Create job template for feature branch {{ git_branch_name }}
          #no_log: true
          ansible.controller.job_template:
            organization: "Pipeline"
            # yamllint disable-line rule:line-length
            name: "Pipeline - SOE - job template for feature branch {{ git_branch_name }}"
            description: "Job template for feature branch {{ git_branch_name }}"
            inventory: "Demo Inventory"
            job_type: "run"
            project: "Pipeline - SOE - project for feature branch {{ git_branch_name }}"
            playbook: "playbooks/linux-soe.yml"
            ask_job_type_on_launch: "yes"
            ask_verbosity_on_launch: "yes"
            ask_inventory_on_launch: "yes"
            ask_limit_on_launch: "yes"
            job_slice_count: "1"
            timeout: 5400
            # execution_environment: ""
            credentials:
              - tower-credentials
            state: "present"
            timeout: "0"
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"

      when:
        - action | lower == "create"

    - block:
        - name: Delete job template for feature branch {{ git_branch_name }}
          # no_log: true
          ansible.controller.job_template:
            organization: "Pipeline"
            # yamllint disable-line rule:line-length
            name: "Pipeline - SOE - job template for feature branch {{ git_branch_name }}"
            description: "Job template for feature branch {{ git_branch_name }}"
            job_type: "run"
            project: "Pipeline - SOE - project for feature branch {{ git_branch_name }}"
            playbook: "linux-soe.yml"
            state: absent
            validate_certs: false
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"

        - name: Delete project for the feature branch {{ git_branch_name }}
          ansible.controller.project:
            name: "Pipeline - SOE - project for feature branch {{ git_branch_name }}"
            # yamllint disable-line rule:line-length
            description: "Test environment for feature branch {{ git_branch_name }}"
            organization: "Pipeline"
            scm_type: git
            scm_url: "{{ tower_webhook_payload.repository.git_http_url }}"
            scm_branch: "{{ git_branch_name }}"
            state: absent
            controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
            controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
            controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"

      when:
        - action | lower == "delete"
