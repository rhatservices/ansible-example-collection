---
- name: Create a test environment for a feature branch
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Print tower_webhook_payload var
      ansible.builtin.debug:
        var: tower_webhook_payload

    - name: Print webhook event type and ref
      ansible.builtin.debug:
        msg:
          - "Event type: {{tower_webhook_event_type}}"
          - "Event ref: {{tower_webhook_event_ref}}"

    - name: Collect required variables from tower webhook payload
      ansible.builtin.set_fact:
        # The branch name might also be in the event ref BUT Gitea
        # does NOT set the event ref for delete events.
        #
        # We need the ref for DELETE events because it is part of the
        # project/job template name.
        #
        # yamllint disable rule:line-length
        feature_branch_name: "{{ tower_webhook_payload.ref }}"

    - name: Print collected variables for verification
      ansible.builtin.debug:
        msg:
          - "Feature branch name: {{ feature_branch_name }}"

    - name: Create a new feature branch environment
      block:
        - name: Create a project for the feature branch {{ tower_webhook_event_ref }}
          ansible.controller.project:
            name: "Pipeline - SOE - Feature branch {{ tower_webhook_event_ref }}"
            # yamllint disable-line rule:line-length
            description: "Project for feature branch {{ tower_webhook_event_ref }}"
            organization: "Pipeline"
            scm_type: git
            scm_url: "{{ tower_webhook_payload.repository.clone_url }}"
            scm_branch: "{{ tower_webhook_event_ref }}"
            scm_credential: "Pipeline - Gitea developer"
            scm_update_on_launch: yes
            validate_certs: false
            controller_host: "{{ controller_url }}"
            controller_oauthtoken: "{{ controller_oauthtoken }}"

        - name: Create job template for feature branch {{ tower_webhook_event_ref }}
          ansible.controller.job_template:
            organization: "Pipeline"
            # yamllint disable-line rule:line-length
            name: "Pipeline - SOE - Feature branch {{ tower_webhook_event_ref }}"
            description: "Job template for feature branch {{ tower_webhook_event_ref }}"
            inventory: "Demo Inventory"
            job_type: "run"
            project: "Pipeline - SOE - Feature branch {{ tower_webhook_event_ref }}"
            playbook: "playbooks/linux-soe.yml"
            ask_job_type_on_launch: "yes"
            ask_verbosity_on_launch: "yes"
            ask_inventory_on_launch: "yes"
            ask_limit_on_launch: "yes"
            job_slice_count: "1"
            state: "present"
            timeout: "0"
            validate_certs: false
            controller_host: "{{ controller_url }}"
            controller_oauthtoken: "{{ controller_oauthtoken }}"

      when:
        - tower_webhook_event_type == "create"

    - name: Delete feature branch environment
      block:
        - name: Delete job template for feature branch {{ feature_branch_name }}
          # no_log: true
          ansible.controller.job_template:
            # yamllint disable-line rule:line-length
            name: "Pipeline - SOE - Feature branch {{ feature_branch_name }}"
            description: "Job template for feature branch {{ feature_branch_name }}"
            job_type: "run"
            project: "Pipeline - SOE - Project for feature branch {{ feature_branch_name }}"
            playbook: "playbooks/linux-soe.yml"
            organization: "Pipeline"
            state: absent
            validate_certs: false
            controller_host: "{{ controller_url }}"
            controller_oauthtoken: "{{ controller_oauthtoken }}"

        - name: Delete project for the feature branch {{ feature_branch_name }}
          ansible.controller.project:
            name: "Pipeline - SOE - Feature branch {{ feature_branch_name }}"
            # yamllint disable-line rule:line-length
            description: "Project for feature branch {{ feature_branch_name }}"
            organization: "Pipeline"
            scm_type: git
            scm_url: "{{ tower_webhook_payload.repository.clone_url }}"
            scm_branch: "{{ feature_branch_name }}"
            state: absent
            validate_certs: false
            controller_host: "{{ controller_url }}"
            controller_oauthtoken: "{{ controller_oauthtoken }}"

      when:
        - tower_webhook_event_type == "delete"
